<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: stealth-api-v2.0.proto

namespace Stealth;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Holds the spline information for a sentiment length or color spline.
 * Values should be converted to between -1 and 1 by dividing by 1000. 
 *
 * Generated from protobuf message <code>stealth.SentimentSpline</code>
 */
class SentimentSpline extends \Google\Protobuf\Internal\Message
{
    /**
     * Average length. (-1000 to 1000)
     *
     * Generated from protobuf field <code>sint32 average = 1;</code>
     */
    private $average = 0;
    /**
     * First spline point.
     *
     * Generated from protobuf field <code>uint32 i = 2;</code>
     */
    private $i = 0;
    /**
     * Second spline point.
     *
     * Generated from protobuf field <code>uint32 j = 3;</code>
     */
    private $j = 0;
    /**
     * Position at point 0. (-1000 to 1000)
     *
     * Generated from protobuf field <code>sint32 x = 4;</code>
     */
    private $x = 0;
    /**
     * Position at point i. (-1000 to 1000)
     *
     * Generated from protobuf field <code>sint32 y = 5;</code>
     */
    private $y = 0;
    /**
     * Position at point j. (-1000 to 1000)
     *
     * Generated from protobuf field <code>sint32 z = 6;</code>
     */
    private $z = 0;

    public function __construct() {
        \GPBMetadata\StealthApiV20::initOnce();
        parent::__construct();
    }

    /**
     * Average length. (-1000 to 1000)
     *
     * Generated from protobuf field <code>sint32 average = 1;</code>
     * @return int
     */
    public function getAverage()
    {
        return $this->average;
    }

    /**
     * Average length. (-1000 to 1000)
     *
     * Generated from protobuf field <code>sint32 average = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setAverage($var)
    {
        GPBUtil::checkInt32($var);
        $this->average = $var;

        return $this;
    }

    /**
     * First spline point.
     *
     * Generated from protobuf field <code>uint32 i = 2;</code>
     * @return int
     */
    public function getI()
    {
        return $this->i;
    }

    /**
     * First spline point.
     *
     * Generated from protobuf field <code>uint32 i = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setI($var)
    {
        GPBUtil::checkUint32($var);
        $this->i = $var;

        return $this;
    }

    /**
     * Second spline point.
     *
     * Generated from protobuf field <code>uint32 j = 3;</code>
     * @return int
     */
    public function getJ()
    {
        return $this->j;
    }

    /**
     * Second spline point.
     *
     * Generated from protobuf field <code>uint32 j = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setJ($var)
    {
        GPBUtil::checkUint32($var);
        $this->j = $var;

        return $this;
    }

    /**
     * Position at point 0. (-1000 to 1000)
     *
     * Generated from protobuf field <code>sint32 x = 4;</code>
     * @return int
     */
    public function getX()
    {
        return $this->x;
    }

    /**
     * Position at point 0. (-1000 to 1000)
     *
     * Generated from protobuf field <code>sint32 x = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setX($var)
    {
        GPBUtil::checkInt32($var);
        $this->x = $var;

        return $this;
    }

    /**
     * Position at point i. (-1000 to 1000)
     *
     * Generated from protobuf field <code>sint32 y = 5;</code>
     * @return int
     */
    public function getY()
    {
        return $this->y;
    }

    /**
     * Position at point i. (-1000 to 1000)
     *
     * Generated from protobuf field <code>sint32 y = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setY($var)
    {
        GPBUtil::checkInt32($var);
        $this->y = $var;

        return $this;
    }

    /**
     * Position at point j. (-1000 to 1000)
     *
     * Generated from protobuf field <code>sint32 z = 6;</code>
     * @return int
     */
    public function getZ()
    {
        return $this->z;
    }

    /**
     * Position at point j. (-1000 to 1000)
     *
     * Generated from protobuf field <code>sint32 z = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setZ($var)
    {
        GPBUtil::checkInt32($var);
        $this->z = $var;

        return $this;
    }

}

